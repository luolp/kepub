<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.keyue.dao.BookChapterMapper">
  <resultMap id="BaseResultMap" type="com.keyue.dao.model.BookChapter">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="book_no" jdbcType="VARCHAR" property="bookNo" />
    <result column="chapter_no" jdbcType="INTEGER" property="chapterNo" />
    <result column="chapter_name" jdbcType="VARCHAR" property="chapterName" />
    <result column="parent_no" jdbcType="INTEGER" property="parentNo" />
    <result column="file_url" jdbcType="VARCHAR" property="fileUrl" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, book_no, chapter_no, chapter_name, parent_no, file_url, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from book_chapter
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book_chapter
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.keyue.dao.model.BookChapter">
    insert into book_chapter (id, book_no, chapter_no,
      chapter_name, parent_no, file_url,
      create_time)
    values (#{id,jdbcType=INTEGER}, #{bookNo,jdbcType=VARCHAR}, #{chapterNo,jdbcType=INTEGER},
      #{chapterName,jdbcType=VARCHAR}, #{parentNo,jdbcType=INTEGER}, #{fileUrl,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.keyue.dao.model.BookChapter">
    insert into book_chapter
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bookNo != null">
        book_no,
      </if>
      <if test="chapterNo != null">
        chapter_no,
      </if>
      <if test="chapterName != null">
        chapter_name,
      </if>
      <if test="parentNo != null">
        parent_no,
      </if>
      <if test="fileUrl != null">
        file_url,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bookNo != null">
        #{bookNo,jdbcType=VARCHAR},
      </if>
      <if test="chapterNo != null">
        #{chapterNo,jdbcType=INTEGER},
      </if>
      <if test="chapterName != null">
        #{chapterName,jdbcType=VARCHAR},
      </if>
      <if test="parentNo != null">
        #{parentNo,jdbcType=INTEGER},
      </if>
      <if test="fileUrl != null">
        #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.keyue.dao.model.BookChapter">
    update book_chapter
    <set>
      <if test="bookNo != null">
        book_no = #{bookNo,jdbcType=VARCHAR},
      </if>
      <if test="chapterNo != null">
        chapter_no = #{chapterNo,jdbcType=INTEGER},
      </if>
      <if test="chapterName != null">
        chapter_name = #{chapterName,jdbcType=VARCHAR},
      </if>
      <if test="parentNo != null">
        parent_no = #{parentNo,jdbcType=INTEGER},
      </if>
      <if test="fileUrl != null">
        file_url = #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.keyue.dao.model.BookChapter">
    update book_chapter
    set book_no = #{bookNo,jdbcType=VARCHAR},
      chapter_no = #{chapterNo,jdbcType=INTEGER},
      chapter_name = #{chapterName,jdbcType=VARCHAR},
      parent_no = #{parentNo,jdbcType=INTEGER},
      file_url = #{fileUrl,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="queryChapterListByBookNo" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from book_chapter
    where book_no = #{bookNo}
  </select>

  <!-- 随机取一条数据 -->
  <select id="randomChapter" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from book_chapter
    join (select round(rand()*(select max(id) from book_chapter)) as idd) as temp_table on book_chapter.id>temp_table.idd limit 1;
  </select>
</mapper>