<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.keyue.dao.UserVisitTimeLogMapper" >
  <resultMap id="BaseResultMap" type="com.keyue.dao.model.UserVisitTimeLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="duration" property="duration" jdbcType="INTEGER" />
    <result column="record_time" property="recordTime" jdbcType="TIMESTAMP" />
    <result column="book_no" property="bookNo" jdbcType="VARCHAR" />
    <result column="chapter_no" property="chapterNo" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, duration, record_time, book_no, chapter_no
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from user_visit_time_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_visit_time_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.keyue.dao.model.UserVisitTimeLog" >
    insert into user_visit_time_log (id, user_id, duration,
      record_time, book_no, chapter_no
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{duration,jdbcType=INTEGER},
      #{recordTime,jdbcType=TIMESTAMP}, #{bookNo,jdbcType=VARCHAR}, #{chapterNo,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.keyue.dao.model.UserVisitTimeLog" >
    insert into user_visit_time_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="duration != null" >
        duration,
      </if>
      <if test="recordTime != null" >
        record_time,
      </if>
      <if test="bookNo != null" >
        book_no,
      </if>
      <if test="chapterNo != null" >
        chapter_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="duration != null" >
        #{duration,jdbcType=INTEGER},
      </if>
      <if test="recordTime != null" >
        #{recordTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bookNo != null" >
        #{bookNo,jdbcType=VARCHAR},
      </if>
      <if test="chapterNo != null" >
        #{chapterNo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.keyue.dao.model.UserVisitTimeLog" >
    update user_visit_time_log
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="duration != null" >
        duration = #{duration,jdbcType=INTEGER},
      </if>
      <if test="recordTime != null" >
        record_time = #{recordTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bookNo != null" >
        book_no = #{bookNo,jdbcType=VARCHAR},
      </if>
      <if test="chapterNo != null" >
        chapter_no = #{chapterNo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.keyue.dao.model.UserVisitTimeLog" >
    update user_visit_time_log
    set user_id = #{userId,jdbcType=INTEGER},
      duration = #{duration,jdbcType=INTEGER},
      record_time = #{recordTime,jdbcType=TIMESTAMP},
      book_no = #{bookNo,jdbcType=VARCHAR},
      chapter_no = #{chapterNo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 查询用户每天阅读时长 -->
  <select id="queryVisitLog" resultType="com.keyue.entity.VisitLogData" parameterType="java.lang.Integer" >
    SELECT date_format(record_time, '%Y-%m-%d') recordDate,sum(duration) totalDuration
    from user_visit_time_log
    where user_id = #{userId,jdbcType=INTEGER}
    GROUP BY date_format(record_time, '%Y-%m-%d')
  </select>
</mapper>